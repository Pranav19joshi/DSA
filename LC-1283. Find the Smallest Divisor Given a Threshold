class Solution {
public:
    int findMax(vector<int>& nums) {
        int maxi = nums[0]; 
        for (int i = 1; i < nums.size(); i++) {
            if (nums[i] > maxi) {
                maxi = nums[i];
            }
        }
        return maxi;
    }
    int ceilDiv(int a, int b) {
        return (a + b - 1) / b;
    }
    int thres(vector<int>& nums, int k){
        int n = nums.size();
        int sum = 0;
        for(int i=0 ; i<n ; i++){
            sum += ceilDiv(nums[i], k); 
        }
        return sum;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int start = 1;
        int end = findMax(nums);
        int mid ;
        int ans = -1;
        while(start<=end){
            mid = (start+end)/2;
            
            if(thres(nums,mid) <= threshold){
                ans = mid;
                end = mid-1;
            }
            else{
                start= mid+1;
            }
        }
        return ans;
    }
};
